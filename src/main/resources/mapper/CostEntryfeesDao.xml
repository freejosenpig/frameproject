<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zktr.yuyi.dao.cost.CostEntryfeesDao">
  <resultMap id="BaseResultMap" type="com.zktr.yuyi.entity.cost.CostEntryfees">
    <id column="entryfees_Id" jdbcType="INTEGER" property="entryfeesId" />
    <result column="oldpeople_Id" jdbcType="INTEGER" property="oldpeopleId" />
    <result column="entryfees_money" jdbcType="DECIMAL" property="entryfeesMoney" />
    <result column="entryfees_explain" jdbcType="VARCHAR" property="entryfeesExplain" />
    <result column="entryfees_time" jdbcType="TIMESTAMP" property="entryfeesTime" />
    <result column="entryfees_opId" jdbcType="INTEGER" property="entryfeesOpid" />
    <result column="entryfees_TimeLiness" jdbcType="INTEGER" property="entryfeesTimeliness" />
    <result column="entryfees_status" jdbcType="INTEGER" property="entryfeesstatus"/>

    <association property="jdOldpeople" javaType="com.zktr.yuyi.entity.liangzheng.JdOldpeople">
      <id column="oldpeople_id" jdbcType="INTEGER" property="oldpeopleId" />
      <result column="oldpeople_name" jdbcType="VARCHAR" property="oldpeopleName" />
      <result column="oldpeople_sex" jdbcType="VARCHAR" property="oldpeopleSex" />
      <result column="oldpeople_idcard" jdbcType="VARCHAR" property="oldpeopleIdcard" />
      <result column="oldpeople_birthday" jdbcType="TIMESTAMP" property="oldpeopleBirthday" />
      <result column="oldpeople_phone" jdbcType="VARCHAR" property="oldpeoplePhone" />
      <result column="oldpeople_marriage" jdbcType="VARCHAR" property="oldpeopleMarriage" />
      <result column="oldpeople_national" jdbcType="VARCHAR" property="oldpeopleNational" />
      <result column="oldpeople_political" jdbcType="VARCHAR" property="oldpeoplePolitical" />
      <result column="oldpeople_job" jdbcType="VARCHAR" property="oldpeopleJob" />
      <result column="oldpeople_address" jdbcType="VARCHAR" property="oldpeopleAddress" />
      <result column="oldpeople_hobby" jdbcType="VARCHAR" property="oldpeopleHobby" />
      <result column="oldpeople_character" jdbcType="VARCHAR" property="oldpeopleCharacter" />
      <result column="oldpeople_likefood" jdbcType="VARCHAR" property="oldpeopleLikefood" />
      <result column="oldpeople_culture" jdbcType="VARCHAR" property="oldpeopleCulture" />
      <result column="oldpeople_ability" jdbcType="VARCHAR" property="oldpeopleAbility" />
      <result column="oldpeople_medical" jdbcType="VARCHAR" property="oldpeopleMedical" />
      <result column="oldpeople_medicalid" jdbcType="VARCHAR" property="oldpeopleMedicalid" />
      <result column="oldpeople_number" jdbcType="VARCHAR" property="oldpeopleNumber" />
      <result column="oldpeople_addname" jdbcType="INTEGER" property="oldpeopleAddname" />
      <result column="oldpeople_addtime" jdbcType="TIMESTAMP" property="oldpeopleAddtime" />
      <result column="oldpeople_account" jdbcType="DECIMAL" property="oldpeopleAccount" />
      <result column="oldpeople_age" jdbcType="INTEGER" property="oldpeopleAge" />
      <result column="oldpeople_status" jdbcType="INTEGER" property="oldpeopleStatus" />
      <result column="oldpeople_registrant" jdbcType="INTEGER" property="oldpeopleRegistrant" />
      <result column="oldpeople_rtime" jdbcType="TIMESTAMP" property="oldpeopleRtime" />
      <result column="oldpeople_note" jdbcType="VARCHAR" property="oldpeopleNote" />
    </association>
  </resultMap>


  <sql id="Base_Column_List">
    entry.entryfees_Id, entry.oldpeople_Id, entry.entryfees_money, entry.entryfees_explain, entry.entryfees_time, entry.entryfees_opId,
    entry.entryfees_TimeLiness ,entry.entryfees_status
  </sql>

  <sql id="oldpeople">
     old.oldpeople_id,  old.oldpeople_name,  old.oldpeople_sex,  old.oldpeople_idcard,  old.oldpeople_birthday,
     old.oldpeople_phone,  old.oldpeople_marriage,  old.oldpeople_national,  old.oldpeople_political,  old.oldpeople_job,
     old.oldpeople_address,  old.oldpeople_hobby,  old.oldpeople_character,  old.oldpeople_likefood,  old.oldpeople_culture,
     old.oldpeople_ability,  old.oldpeople_medical,  old.oldpeople_medicalid,  old.oldpeople_number,  old.oldpeople_addname,
     old.oldpeople_addtime,  old.oldpeople_account,  old.oldpeople_age, oldpeople_status,  old.oldpeople_registrant,
     old.oldpeople_rtime,  old.oldpeople_note
  </sql>

  <!--  根据老人编号查询缴费信息-->
  <select id="selectByoldId" resultMap="BaseResultMap">
    select * from cost_entryfees where  oldpeople_Id={oldpeopleId,jdbcType=INTEGER };
  </select>

  <!--  查询所有缴费信息-->
  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="oldpeople"/>,<include refid="Base_Column_List"/> from cost_entryfees entry
    inner join jd_oldpeople old on old.oldpeople_id=entry.oldpeople_Id
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cost_entryfees
    where entryfees_Id = #{entryfeesId,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cost_entryfees
    where entryfees_Id = #{entryfeesId,jdbcType=INTEGER}
  </delete>

  <!--  新增缴费-->
  <insert id="insert" keyColumn="entryfees_Id" keyProperty="entryfeesId" parameterType="com.zktr.yuyi.entity.cost.CostEntryfees" useGeneratedKeys="true">
    insert into cost_entryfees (oldpeople_Id, entryfees_money, entryfees_explain,entryfees_opId)
    values (#{oldpeopleId,jdbcType=INTEGER}, #{entryfeesMoney,jdbcType=DECIMAL}, #{entryfeesExplain,jdbcType=VARCHAR}, #{entryfeesOpid,jdbcType=INTEGER})
  </insert>


  <insert id="insertSelective" keyColumn="entryfees_Id" keyProperty="entryfeesId" parameterType="com.zktr.yuyi.entity.cost.CostEntryfees" useGeneratedKeys="true">
    insert into cost_entryfees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oldpeopleId != null">
        oldpeople_Id,
      </if>
      <if test="entryfeesMoney != null">
        entryfees_money,
      </if>
      <if test="entryfeesExplain != null">
        entryfees_explain,
      </if>
      <if test="entryfeesTime != null">
        entryfees_time,
      </if>
      <if test="entryfeesOpid != null">
        entryfees_opId,
      </if>
      <if test="entryfeesTimeliness != null">
        entryfees_TimeLiness,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oldpeopleId != null">
        #{oldpeopleId,jdbcType=INTEGER},
      </if>
      <if test="entryfeesMoney != null">
        #{entryfeesMoney,jdbcType=DECIMAL},
      </if>
      <if test="entryfeesExplain != null">
        #{entryfeesExplain,jdbcType=VARCHAR},
      </if>
      <if test="entryfeesTime != null">
        #{entryfeesTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryfeesOpid != null">
        #{entryfeesOpid,jdbcType=INTEGER},
      </if>
      <if test="entryfeesTimeliness != null">
        #{entryfeesTimeliness,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <!--  根据编号修改缴费-->
  <update id="updateByKey" parameterType="com.zktr.yuyi.entity.cost.CostEntryfees">
    update cost_entryfees
    <set>
      <if test="oldpeopleId != null">
        oldpeople_Id = #{oldpeopleId,jdbcType=INTEGER},
      </if>
      <if test="entryfeesMoney != null">
        entryfees_money = #{entryfeesMoney,jdbcType=DECIMAL},
      </if>
      <if test="entryfeesExplain != null">
        entryfees_explain = #{entryfeesExplain,jdbcType=VARCHAR},
      </if>
      <if test="entryfeesTime != null">
        entryfees_time = #{entryfeesTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryfeesOpid != null">
        entryfees_opId = #{entryfeesOpid,jdbcType=INTEGER},
      </if>
      <if test="entryfeesTimeliness != null">
        entryfees_TimeLiness = #{entryfeesTimeliness,jdbcType=INTEGER},
      </if>
      entryfees_status=1
    </set>
    where oldpeople_Id = #{oldpeopleId,jdbcType=INTEGER}
  </update>



  <update id="updateByPrimaryKey" parameterType="com.zktr.yuyi.entity.cost.CostEntryfees">
    update cost_entryfees
    set oldpeople_Id = #{oldpeopleId,jdbcType=INTEGER},
      entryfees_money = #{entryfeesMoney,jdbcType=DECIMAL},
      entryfees_explain = #{entryfeesExplain,jdbcType=VARCHAR},
      entryfees_time = #{entryfeesTime,jdbcType=TIMESTAMP},
      entryfees_opId = #{entryfeesOpid,jdbcType=INTEGER},
      entryfees_TimeLiness = #{entryfeesTimeliness,jdbcType=INTEGER}
    where entryfees_Id = #{entryfeesId,jdbcType=INTEGER}
  </update>
</mapper>