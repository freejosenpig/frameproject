<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zktr.yuyi.dao.cost.CostListDao">
  <resultMap id="BaseResultMap" type="com.zktr.yuyi.entity.cost.CostList">
    <id column="list_Id" jdbcType="INTEGER" property="listId" />
    <result column="oldpeople_Id" jdbcType="INTEGER" property="oldpeopleId" />
    <result column="list_explain" jdbcType="VARCHAR" property="listExplain" />
    <result column="list_moeny" jdbcType="DECIMAL" property="listMoeny" />
    <result column="list_time" jdbcType="TIMESTAMP" property="listTime" />
    <result column="liat_opId" jdbcType="INTEGER" property="liatOpid" />
    <result column="list_remark" jdbcType="VARCHAR" property="listRemark" />
    <result column="timeLiness" jdbcType="INTEGER" property="timeLiness" />

    <association property="jdOldpeople" javaType="com.zktr.yuyi.entity.liangzheng.JdOldpeople">
      <id column="oldpeople_id" jdbcType="INTEGER" property="oldpeopleId" />
      <result column="oldpeople_name" jdbcType="VARCHAR" property="oldpeopleName" />
      <result column="oldpeople_sex" jdbcType="VARCHAR" property="oldpeopleSex" />
      <result column="oldpeople_idcard" jdbcType="VARCHAR" property="oldpeopleIdcard" />
      <result column="oldpeople_birthday" jdbcType="TIMESTAMP" property="oldpeopleBirthday" />
      <result column="oldpeople_phone" jdbcType="VARCHAR" property="oldpeoplePhone" />
      <result column="oldpeople_marriage" jdbcType="VARCHAR" property="oldpeopleMarriage" />
      <result column="oldpeople_national" jdbcType="VARCHAR" property="oldpeopleNational" />
      <result column="oldpeople_political" jdbcType="VARCHAR" property="oldpeoplePolitical" />
      <result column="oldpeople_job" jdbcType="VARCHAR" property="oldpeopleJob" />
      <result column="oldpeople_address" jdbcType="VARCHAR" property="oldpeopleAddress" />
      <result column="oldpeople_hobby" jdbcType="VARCHAR" property="oldpeopleHobby" />
      <result column="oldpeople_character" jdbcType="VARCHAR" property="oldpeopleCharacter" />
      <result column="oldpeople_likefood" jdbcType="VARCHAR" property="oldpeopleLikefood" />
      <result column="oldpeople_culture" jdbcType="VARCHAR" property="oldpeopleCulture" />
      <result column="oldpeople_ability" jdbcType="VARCHAR" property="oldpeopleAbility" />
      <result column="oldpeople_medical" jdbcType="VARCHAR" property="oldpeopleMedical" />
      <result column="oldpeople_medicalid" jdbcType="VARCHAR" property="oldpeopleMedicalid" />
      <result column="oldpeople_number" jdbcType="VARCHAR" property="oldpeopleNumber" />
      <result column="oldpeople_addname" jdbcType="INTEGER" property="oldpeopleAddname" />
      <result column="oldpeople_addtime" jdbcType="TIMESTAMP" property="oldpeopleAddtime" />
      <result column="oldpeople_account" jdbcType="DECIMAL" property="oldpeopleAccount" />
      <result column="oldpeople_age" jdbcType="INTEGER" property="oldpeopleAge" />
      <result column="oldpeople_status" jdbcType="INTEGER" property="oldpeopleStatus" />
      <result column="oldpeople_registrant" jdbcType="INTEGER" property="oldpeopleRegistrant" />
      <result column="oldpeople_rtime" jdbcType="TIMESTAMP" property="oldpeopleRtime" />
      <result column="oldpeople_note" jdbcType="VARCHAR" property="oldpeopleNote" />
    </association>


  </resultMap>

  <sql id="Base_Column_List">
    list.list_Id, list.oldpeople_Id, list.list_explain, list.list_moeny, list.list_time, list.liat_opId, list.list_remark
  </sql>

  <sql id="oldpeople">
     old.oldpeople_id,  old.oldpeople_name,  old.oldpeople_sex,  old.oldpeople_idcard,  old.oldpeople_birthday,
     old.oldpeople_phone,  old.oldpeople_marriage,  old.oldpeople_national,  old.oldpeople_political,  old.oldpeople_job,
     old.oldpeople_address,  old.oldpeople_hobby,  old.oldpeople_character,  old.oldpeople_likefood,  old.oldpeople_culture,
     old.oldpeople_ability,  old.oldpeople_medical,  old.oldpeople_medicalid,  old.oldpeople_number,  old.oldpeople_addname,
     old.oldpeople_addtime,  old.oldpeople_account,  old.oldpeople_age, oldpeople_status,  old.oldpeople_registrant,
     old.oldpeople_rtime,  old.oldpeople_note
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>,<include refid="oldpeople"/> from cost_list list
    inner join jd_oldpeople old on old.oldpeople_id=list.oldpeople_Id
  </select>

  <select id="selectBycontion" resultMap="BaseResultMap">
    select <include refid="oldpeople"/>,<include refid="Base_Column_List"/> from cost_list list
    inner join jd_oldpeople old on old.oldpeople_id=list.oldpeople_Id
    <where>
      <if test="oldpeople_name != null">
        oldpeople_name like CONCAT(CONCAT('%',#{oldpeopleName,jdbcType=VARCHAR},'%'))
      </if>
    </where>
    ORDER BY  list.list_Id
  </select>



  <!--  根据老人编号查询流水信息-->
  <select id="selectByOldId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from cost_list
    where oldpeople_Id = #{oldpeopleId,jdbcType=INTEGER}
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cost_list
    where list_Id = #{listId,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cost_list
    where list_Id = #{listId,jdbcType=INTEGER}
  </delete>

  <!--  新增流水信息-->
  <insert id="insert" keyColumn="list_Id" keyProperty="listId" parameterType="com.zktr.yuyi.entity.cost.CostList" useGeneratedKeys="true">
    insert into cost_list (oldpeople_Id, list_explain, list_moeny, liat_opId, list_remark)
    values (#{oldpeopleId,jdbcType=INTEGER}, #{listExplain,jdbcType=VARCHAR}, #{listMoeny,jdbcType=DECIMAL}, 
      #{liatOpid,jdbcType=INTEGER}, #{listRemark,jdbcType=VARCHAR})
  </insert>


  <insert id="insertSelective" keyColumn="list_Id" keyProperty="listId" parameterType="com.zktr.yuyi.entity.cost.CostList" useGeneratedKeys="true">
    insert into cost_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oldpeopleId != null">
        oldpeople_Id,
      </if>
      <if test="listExplain != null">
        list_explain,
      </if>
      <if test="listMoeny != null">
        list_moeny,
      </if>
      <if test="listTime != null">
        list_time,
      </if>
      <if test="liatOpid != null">
        liat_opId,
      </if>
      <if test="listRemark != null">
        list_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oldpeopleId != null">
        #{oldpeopleId,jdbcType=INTEGER},
      </if>
      <if test="listExplain != null">
        #{listExplain,jdbcType=VARCHAR},
      </if>
      <if test="listMoeny != null">
        #{listMoeny,jdbcType=DECIMAL},
      </if>
      <if test="listTime != null">
        #{listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="liatOpid != null">
        #{liatOpid,jdbcType=INTEGER},
      </if>
      <if test="listRemark != null">
        #{listRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--  根据编号修改流水信息-->
  <update id="updateByKey" parameterType="com.zktr.yuyi.entity.cost.CostList">
    update cost_list
    <set>
      <if test="oldpeopleId != null">
        oldpeople_Id = #{oldpeopleId,jdbcType=INTEGER},
      </if>
      <if test="listExplain != null">
        list_explain = #{listExplain,jdbcType=VARCHAR},
      </if>
      <if test="listMoeny != null">
        list_moeny = #{listMoeny,jdbcType=DECIMAL},
      </if>
      <if test="listTime != null">
        list_time = #{listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="liatOpid != null">
        liat_opId = #{liatOpid,jdbcType=INTEGER},
      </if>
      <if test="listRemark != null">
        list_remark = #{listRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where list_Id = #{listId,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.zktr.yuyi.entity.cost.CostList">
    update cost_list
    set oldpeople_Id = #{oldpeopleId,jdbcType=INTEGER},
      list_explain = #{listExplain,jdbcType=VARCHAR},
      list_moeny = #{listMoeny,jdbcType=DECIMAL},
      list_time = #{listTime,jdbcType=TIMESTAMP},
      liat_opId = #{liatOpid,jdbcType=INTEGER},
      list_remark = #{listRemark,jdbcType=VARCHAR}
    where list_Id = #{listId,jdbcType=INTEGER}
  </update>
</mapper>